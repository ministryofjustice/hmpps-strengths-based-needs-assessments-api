version: 2.1

orbs:
  hmpps: ministryofjustice/hmpps@8.2
  mem: circleci/rememborb@0.0.2

parameters:
  alerts-slack-channel:
    type: string
    default: hmpps-strengths-based-needs-assessments-alerts
  releases-slack-channel:
    type: string
    default: hmpps-strengths-based-needs-assessments-alerts
  node-version:
    type: string
    default: 20.8-browsers
  deploy:
    description: Trigger a manual deployment
    type: string
    default: ""

jobs:
  validate:
    machine:
      image: ubuntu-2004:2023.10.1
    steps:
      - checkout
      - restore_cache:
          keys:
            - gradle-{{ checksum "build.gradle.kts" }}
            - gradle-
      - run:
          command: make dev-up lint test-coverage
      - save_cache:
          paths:
            - ~/.gradle
          key: gradle-{{ checksum "build.gradle.kts" }}
      - store_test_results:
          path: build/test-results
      - store_artifacts:
          path: build/reports/tests
      - store_artifacts:
          path: build/reports/kover/html
          destination: kover
      - store_artifacts:
          path: build/reports/detekt/detekt.html

  e2e_test:
    machine:
      image: ubuntu-2004:2023.10.1
    parallelism: 4
    steps:
      - checkout
      - attach_workspace:
          at: ~/app
      - run:
          name: Extract saved container image
          command: docker load --input ~/app/docker_cache/build_image.tar
      - mem/recall:
          env_var: APP_VERSION
      - run:
          name: Stand up a test environment
          command: make test-up
      - run:
          name: Clone UI repository
          command: git clone git@github.com:ministryofjustice/hmpps-strengths-based-needs-assessments-ui.git e2e-test-ui
      - run:
          name: Run the end-to-end tests
          command: |
            cd e2e-test-ui
            make e2e-ci
      - store_test_results:
          path: e2e-test-ui/test_results
      - store_artifacts:
          path: e2e-test-ui/cypress/videos
      - store_artifacts:
          path: e2e-test-ui/cypress/screenshots

workflows:
  version: 2
  build-test-and-deploy:
    when:
      not: << pipeline.parameters.deploy >>
    jobs:
      - validate:
          filters:
            tags:
              ignore: /.*/
      - hmpps/helm_lint:
          name: helm_lint
      - hmpps/build_docker:
          name: build_docker
          publish: false
          persist_container_image: true
          jira_update: true
          pipeline_id: << pipeline.id >>
          pipeline_number: << pipeline.number >>
          context: hmpps-common-vars
      - e2e_test:
          context: hmpps-common-vars
          requires:
            - build_docker
      - hmpps/publish_docker:
          name: publish_docker
          publish_latest_tag: true
          context: hmpps-common-vars
          requires:
            - validate
            - build_docker
            - e2e_test
            - helm_lint
          filters:
            branches:
              only:
                - main
      - hmpps/deploy_env:
          name: deploy_dev
          env: "dev"
          jira_update: true
          pipeline_id: << pipeline.id >>
          pipeline_number: << pipeline.number >>
          context: hmpps-common-vars
          filters:
            branches:
              only:
                - main
          requires:
            - publish_docker
          helm_timeout: 5m
  #      - hmpps/deploy_env:
  #          name: deploy_preprod
  #          env: "preprod"
  #          jira_update: true
  #          jira_env_type: staging
  #          pipeline_id: << pipeline.id >>
  #          pipeline_number: << pipeline.number >>
  #          context:
  #            - hmpps-common-vars
  #            - hmpps-strengths-based-needs-assessments-api-preprod
  #          requires:
  #            - deploy_dev
  #            - e2e_test_dev
  #          helm_timeout: 5m
  #      - request-prod-approval:
  #          type: approval
  #          requires:
  #            - deploy_preprod
  #      - hmpps/deploy_env:
  #          name: deploy_prod
  #          env: "prod"
  #          jira_update: true
  #          jira_env_type: production
  #          pipeline_id: << pipeline.id >>
  #          pipeline_number: << pipeline.number >>
  #          slack_notification: true
  #          slack_channel_name: << pipeline.parameters.releases-slack-channel >>
  #          context:
  #            - hmpps-common-vars
  #            - hmpps-strengths-based-needs-assessments-api-prod
  #          requires:
  #            - request-prod-approval
  #          helm_timeout: 5m

  deploy-to-test-env:
    when:
      and:
        - equal: [ "test", << pipeline.parameters.deploy >> ]
    jobs:
      - hmpps/build_docker:
          name: build_docker
          publish: false
          persist_container_image: true
          jira_update: true
          pipeline_id: << pipeline.id >>
          pipeline_number: << pipeline.number >>
          context:
            - hmpps-common-vars
            - hmpps-strengths-based-needs-assessments-api-test
      - hmpps/publish_docker:
          name: publish_docker
          publish_latest_tag: false
          context: hmpps-common-vars
          requires:
            - build_docker
      - hmpps/deploy_env:
          name: deploy_test
          env: "test"
          jira_update: true
          jira_env_type: testing
          pipeline_id: << pipeline.id >>
          pipeline_number: << pipeline.number >>
          context:
            - hmpps-common-vars
            - hmpps-strengths-based-needs-assessments-api-test
          requires:
            - publish_docker
          helm_timeout: 5m

  security:
    triggers:
      - schedule:
          cron: "11 8 * * 1-5"
          filters:
            branches:
              only:
                - main
    jobs:
      - hmpps/gradle_owasp_dependency_check:
          jdk_tag: "21.0"
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          context:
            - hmpps-common-vars
      - hmpps/trivy_latest_scan:
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          context:
            - hmpps-common-vars
      - hmpps/veracode_pipeline_scan:
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          context:
            - veracode-credentials
            - hmpps-common-vars
  security-weekly:
    triggers:
      - schedule:
          cron: "23 8 * * 1"
          filters:
            branches:
              only:
                - main
    jobs:
      - hmpps/veracode_policy_scan:
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          context:
            - veracode-credentials
            - hmpps-common-vars
